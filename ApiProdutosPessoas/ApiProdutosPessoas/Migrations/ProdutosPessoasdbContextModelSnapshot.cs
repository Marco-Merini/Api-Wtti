// <auto-generated />
using System;
using ApiProdutosPessoas.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApiProdutosPessoas.Migrations
{
    [DbContext(typeof(ProdutosPessoasdbContext))]
    partial class ProdutosPessoasdbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ApiProdutosPessoas.Models.CidadeModel", b =>
                {
                    b.Property<int>("codigoIBGE")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CodigoPais")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codigoIBGE");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("ApiProdutosPessoas.Models.MarcaModel", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.ToTable("MarcaModel");
                });

            modelBuilder.Entity("ApiProdutosPessoas.Models.PessoaModel", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("CodigoCidade")
                        .HasColumnType("int");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("NumeroEstabelecimento")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("CodigoCidade");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("ApiProdutosPessoas.Models.ProdutoModel", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Estoque")
                        .HasColumnType("int");

                    b.Property<int?>("MarcaCodigo")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("MarcaCodigo");

                    b.ToTable("ProdutoModel");
                });

            modelBuilder.Entity("ApiProdutosPessoas.Models.PessoaModel", b =>
                {
                    b.HasOne("ApiProdutosPessoas.Models.CidadeModel", "Cidade")
                        .WithMany()
                        .HasForeignKey("CodigoCidade")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("ApiProdutosPessoas.Models.ProdutoModel", b =>
                {
                    b.HasOne("ApiProdutosPessoas.Models.MarcaModel", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaCodigo");

                    b.Navigation("Marca");
                });
#pragma warning restore 612, 618
        }
    }
}
